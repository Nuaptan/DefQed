Proof(
	Reflection = Reflection(Condition = Formula(Bracket(Satisfied = True, Type = BracketHolder,
	Bracket(Satisfied = True, Type = StatementHolder,
	MicroStatement(Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [0](A), Value = );); Notation([1]==); Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [1](B), Value = );););); Notation([2]AND); Bracket(Satisfied = True, Type = StatementHolder,
	MicroStatement(Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([1]ITEM);, [1](B), Value = );); Notation([1]==); Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([2]ITEM);, [2](C), Value = ););););););, Conclusions = List(MicroStatement(Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [0](A), Value = );); Notation([1]==); Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([2]ITEM);, [2](C), Value = );););));, Transistors = Json([{"Item1":{"MicroStatement":null,"Symbol":{"Name":"a","Id":0,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"x","Id":0,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"b","Id":1,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"y","Id":1,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"a","Id":0,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"y","Id":1,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"b","Id":1,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"z","Id":2,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"b","Id":1,"Notation":{"Name":"item","Id":1,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"x","Id":0,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"c","Id":2,"Notation":{"Name":"item","Id":2,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"y","Id":1,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"b","Id":1,"Notation":{"Name":"item","Id":1,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"y","Id":1,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"c","Id":2,"Notation":{"Name":"item","Id":2,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"z","Id":2,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}}]);,
	[0]MicroStatement(Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [0](X), Value = );); Notation([1]==); Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [2](Z), Value = );););
Reflection = Reflection(Condition = Formula(Bracket(Satisfied = True, Type = BracketHolder,
	Bracket(Satisfied = True, Type = StatementHolder,
	MicroStatement(Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [0](A), Value = );); Notation([1]==); Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [1](B), Value = );););); Notation([2]AND); Bracket(Satisfied = True, Type = StatementHolder,
	MicroStatement(Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([1]ITEM);, [1](B), Value = );); Notation([1]==); Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([2]ITEM);, [2](C), Value = ););););););, Conclusions = List(MicroStatement(Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [0](X), Value = );); Notation([1]==); Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [2](Z), Value = );););));, Transistors = Json([{"Item1":{"MicroStatement":null,"Symbol":{"Name":"a","Id":0,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"x","Id":0,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"b","Id":1,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"z","Id":2,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"b","Id":1,"Notation":{"Name":"item","Id":1,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"x","Id":0,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}},{"Item1":{"MicroStatement":null,"Symbol":{"Name":"c","Id":2,"Notation":{"Name":"item","Id":2,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0},"Item2":{"MicroStatement":null,"Symbol":{"Name":"z","Id":2,"Notation":{"Name":"item","Id":0,"Origin":1},"DirectValue":null},"Connector":null,"SubBrackets":[null,null],"BracketType":3,"Satisfied":0}}]);,
	[0]MicroStatement(Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [0](X), Value = );); Notation([1]==); Bracket(Satisfied = Unknown, Type = SymbolHolder,
	Symbol(Notation = Notation([0]ITEM);, [2](Z), Value = );););
);